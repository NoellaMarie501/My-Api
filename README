# Welcome to My Basecamp 1
Welcome to My Basecamp 1


# Links

- Project Url : http://ec2-51-20-185-230.eu-north-1.compute.amazonaws.com:3001/animals/all?page=2&size=10

- postman collection : https://www.postman.com/interstellar-astronaut-675638/workspace/my-api/collection/18751873-0ddd9843-053a-4694-92b1-11a379ba3436?action=share&creator=18751873

- Swagger Documentation : 

## Task
This project is divided into 3 parts. At the end you will host your application in the cloud. :)
Part I

Find a topic you like (volcanoes/earthquakes/animals/...), get a lot (more than 1k row data)
Part II

Build an API backend using any framework you want to use.

Features of your project:

    User authentification in order to administer the data

    User Token (OAuth)

    Get/Post/Update/Destroy on your topic
    -- Get must be accessible without being connected

    Get will provide pagination (max 20 elements per page)

    Cache (redis)

    (Optional) A Graphql interface

    Documentation, but you can use swagger on your API. Example

    A postman Documentation (and you will provide the link inside your readme)

Part III

Your project must be hosted in the cloud. (AWS/Google Cloud/Azure/IBM)
Each of these providers have a free tier. You should be able to host it for 0$. :)



## Description

- This is a project meant to facilitate project management amoungst a team

- The Main functionalities are:
  - A user can Register
  - A user can to perform CRUD on the Animal topic
  - A user can be added, deleted edited or viewed if it is the user editing his account himself

# Project Structure for the API 

- The project is structured as follows:
  - API Folder : containing the backend of our project
    - home folder : containing the database data for seeding
    - apiCore folder : containing the files that process our received dta from equests
      - controllers folder : containing the route controllers of our project
      - Services folder :services that controls and validates received data before any communication is done with the database
    - Database folder: contains files that communicate direcetly with our database
      - Models folder : contains the models or tables of our database
      - Repository folder : contains methods that save, update, delete and fetch data from our database
      - export_classes file : to export our various repository classes and methods as a module
    - Server folder : contains the various file for the running of our sever



## Installation
## Usage
Once the sever is up and running with the ports and host specified you can now register and use the application
```


### The Core Team
CHEO MARIE NOEL KIENG

<span><i>Made at <a href='https://qwasar.io'>Qwasar SV -- Software Engineering School</a></i></span>
<span><img alt='Qwasar SV -- Software Engineering School's Logo' src='https://storage.googleapis.com/qwasar-public/qwasar-logo_50x50.png' width='20px' /></span>
